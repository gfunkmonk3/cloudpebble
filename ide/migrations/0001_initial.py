# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-12-16 13:07
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ide.models.build
import ide.models.dependency
import ide.utils
import ide.utils.whatsnew


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BuildResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=ide.models.build.make_uuid, max_length=36, validators=[django.core.validators.RegexValidator(b'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$', message='Invalid UUID.')])),
                ('state', models.IntegerField(choices=[(1, 'Pending'), (2, 'Failed'), (3, 'Succeeded')], default=1)),
                ('started', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('finished', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=20)),
                ('total_size', models.IntegerField(blank=True, null=True)),
                ('binary_size', models.IntegerField(blank=True, null=True)),
                ('resource_size', models.IntegerField(blank=True, null=True)),
                ('worker_size', models.IntegerField(blank=True, null=True)),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='ide.BuildResult')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=2000, validators=[ide.models.dependency.validate_dependency_version])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('project_type', models.CharField(choices=[(b'native', 'Pebble C SDK'), (b'simplyjs', 'Simply.js'), (b'pebblejs', 'Pebble.js (beta)'), (b'package', 'Pebble Package'), (b'rocky', 'Rocky.js')], default=b'native', max_length=10)),
                ('sdk_version', models.CharField(choices=[(b'2', 'SDK 2 (obsolete)'), (b'3', 'SDK 4 beta')], default=b'2', max_length=6)),
                ('app_uuid', models.CharField(blank=True, default=ide.utils.generate_half_uuid, max_length=36, null=True, validators=[django.core.validators.RegexValidator(b'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$', message='Invalid UUID.')])),
                ('app_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_short_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_long_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_version_label', models.CharField(blank=True, default=b'1.0', max_length=40, null=True)),
                ('app_is_watchface', models.BooleanField(default=False)),
                ('app_is_hidden', models.BooleanField(default=False)),
                ('app_is_shown_on_communication', models.BooleanField(default=False)),
                ('app_capabilities', models.CharField(blank=True, max_length=255, null=True)),
                ('app_keys', models.TextField(default=b'{}')),
                ('app_jshint', models.BooleanField(default=True)),
                ('app_platforms', models.TextField(blank=True, max_length=255, null=True)),
                ('app_modern_multi_js', models.BooleanField(default=True)),
                ('app_keywords', models.TextField(default=b'[]')),
                ('optimisation', models.CharField(choices=[(b'0', b'None'), (b'1', b'Limited'), (b's', b'Prefer smaller'), (b'2', b'Prefer faster'), (b'3', b'Aggressive (faster, bigger)')], default=b's', max_length=1)),
                ('github_repo', models.CharField(blank=True, max_length=100, null=True)),
                ('github_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('github_last_sync', models.DateTimeField(blank=True, null=True)),
                ('github_last_commit', models.CharField(blank=True, max_length=40, null=True)),
                ('github_hook_uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('github_hook_build', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(b'^[/a-zA-Z0-9_(). -]+$', message='Invalid filename.')])),
                ('kind', models.CharField(choices=[(b'raw', 'Binary blob'), (b'bitmap', 'Bitmap Image'), (b'png', '1-bit PNG'), (b'png-trans', '1-bit PNG with transparency'), (b'font', 'True-Type Font'), (b'pbi', '1-bit Pebble image')], max_length=9)),
                ('is_menu_icon', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_id', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(b'^\\w+$', message='Invalid resource ID.')])),
                ('character_regex', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking', models.IntegerField(blank=True, null=True)),
                ('compatibility', models.CharField(blank=True, max_length=10, null=True)),
                ('target_platforms', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('memory_format', models.CharField(blank=True, choices=[(b'Smallest', 'Smallest'), (b'SmallestPalette', 'Smallest Palette'), (b'1Bit', '1-bit'), (b'8Bit', '8-bit'), (b'1BitPalette', '1-bit Palette'), (b'2BitPalette', '2-bit Palette'), (b'4BitPalette', '4-bit Palette')], max_length=15, null=True)),
                ('storage_format', models.CharField(blank=True, choices=[(b'pbi', '1 bit Pebble Image'), (b'png', 'PNG')], max_length=3, null=True)),
                ('space_optimisation', models.CharField(blank=True, choices=[(b'storage', 'Storage'), (b'memory', 'Memory')], max_length=7, null=True)),
                ('resource_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='ide.ResourceFile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CommaSeparatedIntegerField(blank=True, max_length=50)),
                ('is_legacy', models.BooleanField(default=False)),
                ('resource_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='ide.ResourceFile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SourceFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True, null=True)),
                ('folded_lines', models.TextField(default=b'[]')),
                ('file_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(b'^[/a-zA-Z0-9_.-]+\\.(c|h|js|json)$', message='Invalid file name.')])),
                ('target', models.CharField(choices=[(b'app', 'App'), (b'pkjs', 'PebbleKit JS'), (b'worker', 'Worker'), (b'public', 'Public Header File'), (b'common', 'Shared JS')], default=b'app', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGithub',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='github', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('token', models.CharField(blank=True, max_length=50, null=True)),
                ('nonce', models.CharField(blank=True, max_length=36, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('autocomplete', models.IntegerField(choices=[(1, 'As-you-type'), (2, 'When pressing Ctrl-Space'), (3, 'Never')], default=1, verbose_name='Autocompletion')),
                ('keybinds', models.CharField(choices=[(b'default', 'Standard'), (b'vim', 'vim-like'), (b'emacs', 'emacs-like')], default=b'default', max_length=20, verbose_name='Keybinds')),
                ('theme', models.CharField(choices=[(b'cloudpebble', b'CloudPebble'), (b'monokai', b'Monokai (Sublime Text)'), (b'blackboard', b'Blackboard (TextMate)'), (b'eclipse', b'Eclipse'), (b'solarized light', b'Solarized (light)'), (b'solarized dark', b'Solarized (dark)')], default=b'cloudpebble', max_length=50, verbose_name='Theme')),
                ('use_spaces', models.BooleanField(choices=[(True, 'Using spaces'), (False, 'Using tabs')], default=True, verbose_name='Indents')),
                ('tab_width', models.PositiveSmallIntegerField(default=2, verbose_name='Tab width')),
                ('accepted_terms', models.BooleanField(default=True)),
                ('whats_new', models.PositiveIntegerField(default=ide.utils.whatsnew.count_things)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemplateProject',
            fields=[
                ('project_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ide.Project')),
                ('template_kind', models.IntegerField(choices=[(1, 'Template'), (2, 'SDK Demo')], db_index=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('ide.project',),
        ),
        migrations.AddField(
            model_name='sourcefile',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_files', to='ide.Project'),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='ide.Project'),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='project_dependencies',
            field=models.ManyToManyField(to='ide.Project'),
        ),
        migrations.AddField(
            model_name='dependency',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='ide.Project'),
        ),
        migrations.AddField(
            model_name='buildresult',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builds', to='ide.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='sourcefile',
            unique_together=set([('project', 'file_name', 'target')]),
        ),
        migrations.AlterUniqueTogether(
            name='resourcevariant',
            unique_together=set([('resource_file', 'tags')]),
        ),
        migrations.AlterUniqueTogether(
            name='resourcefile',
            unique_together=set([('project', 'file_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='dependency',
            unique_together=set([('project', 'name')]),
        ),
    ]
